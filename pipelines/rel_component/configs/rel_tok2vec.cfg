[paths]
train = null
dev = null
raw = null
init_tok2vec = null
patterns = null

[system]
seed = 342
gpu_allocator = null

[nlp]
lang = "en"
pipeline = ["entity_ruler", "relation_extractor"]
disabled = []
before_creation = null
after_creation = null
after_pipeline_creation = null
tokenizer = {"@tokenizers":"spacy.Tokenizer.v1"}

[components]

[components.entity_ruler]
factory = "entity_ruler"
ent_id_sep = "||"
overwrite_ents = false
phrase_matcher_attr = null
validate = false

[components.relation_extractor]
factory = "relation_extractor"
labels = []

[components.relation_extractor.model]
@architectures = "rel_model.v1"
nO = null

[components.relation_extractor.model.get_candidates]
@misc = "rel_cand_generator.v2"
max_length = 6

[components.relation_extractor.model.create_candidate_tensor]
@misc = "rel_cand_tensor.v1"

[components.relation_extractor.model.output_layer]
@architectures = "rel_output_layer.v1"
nI = null
nO = null

[components.relation_extractor.model.tok2vec]
@architectures = "spacy.HashEmbedCNN.v1"
pretrained_vectors = null
width = 96
depth = 2
embed_size = 300
window_size = 1
maxout_pieces = 3
subword_features = true

[initialize]

[initialize.components]

[initialize.components.entity_ruler]
patterns_path = ${paths.patterns}

[corpora]

[corpora.dev]
@readers = "spacy.Corpus.v1"
path = ${paths.dev}
gold_preproc = false
max_length = 0
limit = 0

[corpora.train]
@readers = "spacy.Corpus.v1"
path = ${paths.train}
gold_preproc = false
max_length = 0
limit = 0
augmenter = null

[training]
seed = ${system.seed}
gpu_allocator = ${system.gpu_allocator}
dropout = 0.1
accumulate_gradient = 1
patience = 1600
max_epochs = 0
max_steps = 5000
eval_frequency = 500
frozen_components = []
dev_corpus = "corpora.dev"
train_corpus = "corpora.train"
before_to_disk = null
logger = {"@loggers":"spacy.ConsoleLogger.v1"}

[training.batcher]
@batchers = "spacy.batch_by_words.v1"
discard_oversize = false
tolerance = 0.2

[training.batcher.size]
@schedules = "compounding.v1"
start = 100
stop = 1000
compound = 1.001

[training.optimizer]
@optimizers = "Adam.v1"
beta1 = 0.9
beta2 = 0.999
L2_is_weight_decay = true
L2 = 0.01
grad_clip = 1.0
use_averages = false
eps = 0.00000001
learn_rate = 0.001

[training.score_weights]
ents_per_type = null
ents_f = null
ents_p = null
ents_r = null