title: "Detecting people entities in tweets (Named Entity Recognition)"
description: |
  This project demonstrates how to improve spaCy's pretrained models by
  augmenting the data and adapting it to a different domain.

# Variables can be referenced across the project.yml using ${vars.var_name}
vars:
  config: "config.cfg"
  name: "ner_tweets"
  version: "0.0.0"

# These are the directories that the project needs. The project CLI will make
# sure that they always exist.
directories: ["assets", "corpus", "scripts", "metrics"]

# Assets that should be downloaded or available in the directory. We're shipping
# them with the project, so they won't have to be downloaded. But the
# 'project assets' command still lets you verify that the checksums match.
assets:
  - dest: "assets/train_initial.jsonl"
    description: "The training dataset to augment. Later we'll divide this further to create a dev set"
  - dest: "assets/test.jsonl"
    description: "The held-out test dataset to evaluate our output against."

# Workflows are sequences of commands (see below) executed in order. You can
# run them via "spacy project run [workflow]". If a commands's inputs/outputs
# haven't changed, it won't be re-run.
commands:
  - name: "preprocess"
    help: "Convert raw inputs into spaCy's preferred formats"
    script:
      - "python scripts/preprocess.py assets/train_initial.jsonl corpus/train_initial.spacy --text-only"
      - "python scripts/preprocess.py assets/test.jsonl corpus/test.spacy"
    deps:
      - "assets/train_initial.jsonl"
      - "assets/test.jsonl"
    outputs:
      - "corpus/train_initial.spacy"
      - "corpus/test.spacy"
  - name: "augment"
    help: "Augment an input dataset then split it into training and evaluation datasets"
    script:
      - "python -m scripts.augment corpus/train_initial.spacy assets/hmm.pkl corpus/train_aug.spacy corpus/eval_aug.spacy"
    deps:
      - "assets/train_initial.spacy"
    outputs:
      - "corpus/train_aug.spacy"
      - "corpus/eval_aug.spacy"
      - "assets/hmm.pkl"
  - name: "train"
    help: "Train a named entity recognition model"
    script:
      - "python -m spacy train configs/${vars.config} --output training/ --paths.train corpus/train_aug.spacy --paths.dev corpus/eval_aug.spacy"
    deps:
      - "corpus/train_aug.spacy"
      - "corpus/eval_aug.spacy"
  - name: "evaluate"
    help: "Evaluate various experiments and export the computed metrics"
    script: 
      - "python -m spacy evaluate en_core_web_lg corpus/test.spacy --output metrics/baseline.json"
    deps:
      - "corpus/test.spacy"
      - "training/model-best"
